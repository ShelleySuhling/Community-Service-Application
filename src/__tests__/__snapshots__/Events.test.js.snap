// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Events matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Events
    events={Object {}}
    eventsActions={
      Object {
        "requestCreateEvent": [Function],
        "requestEditEvent": [Function],
        "requestEvents": [Function],
      }
    }
    session={Object {}}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Default>
          <div
            className="events-container-desktop"
          >
            <EventHeader
              handleViewChange={[Function]}
              session={Object {}}
            />
            <div
              className="events-card-container"
            >
              <CardGroup>
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-05T15:30:00.000Z",
                      "id": 1,
                      "isMandatory": true,
                      "location": "sample location",
                      "startTime": "2018-01-05T12:30:00.000Z",
                      "title": "first event",
                    }
                  }
                />
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-06T15:30:00.000Z",
                      "id": 2,
                      "isMandatory": false,
                      "location": "sample location",
                      "startTime": "2018-01-06T12:30:00.000Z",
                      "title": "second event",
                    }
                  }
                />
              </CardGroup>
            </div>
          </div>
        </Default>,
        <Mobile>
          <div
            className="events-container-mobile"
          >
            <EventHeader
              handleViewChange={[Function]}
              session={Object {}}
            />
            <CardGroup>
              <EventBlock
                event={
                  Object {
                    "endTime": "2018-01-05T15:30:00.000Z",
                    "id": 1,
                    "isMandatory": true,
                    "location": "sample location",
                    "startTime": "2018-01-05T12:30:00.000Z",
                    "title": "first event",
                  }
                }
              />
              <EventBlock
                event={
                  Object {
                    "endTime": "2018-01-06T15:30:00.000Z",
                    "id": 2,
                    "isMandatory": false,
                    "location": "sample location",
                    "startTime": "2018-01-06T12:30:00.000Z",
                    "title": "second event",
                  }
                }
              />
            </CardGroup>
          </div>
        </Mobile>,
      ],
      "className": "content-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="events-container-desktop"
          >
            <EventHeader
              handleViewChange={[Function]}
              session={Object {}}
            />
            <div
              className="events-card-container"
            >
              <CardGroup>
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-05T15:30:00.000Z",
                      "id": 1,
                      "isMandatory": true,
                      "location": "sample location",
                      "startTime": "2018-01-05T12:30:00.000Z",
                      "title": "first event",
                    }
                  }
                />
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-06T15:30:00.000Z",
                      "id": 2,
                      "isMandatory": false,
                      "location": "sample location",
                      "startTime": "2018-01-06T12:30:00.000Z",
                      "title": "second event",
                    }
                  }
                />
              </CardGroup>
            </div>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <EventHeader
                handleViewChange={[Function]}
                session={Object {}}
              />,
              <div
                className="events-card-container"
              >
                <CardGroup>
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-05T15:30:00.000Z",
                        "id": 1,
                        "isMandatory": true,
                        "location": "sample location",
                        "startTime": "2018-01-05T12:30:00.000Z",
                        "title": "first event",
                      }
                    }
                  />
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-06T15:30:00.000Z",
                        "id": 2,
                        "isMandatory": false,
                        "location": "sample location",
                        "startTime": "2018-01-06T12:30:00.000Z",
                        "title": "second event",
                      }
                    }
                  />
                </CardGroup>
              </div>,
            ],
            "className": "events-container-desktop",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "handleViewChange": [Function],
                "session": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <CardGroup>
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-05T15:30:00.000Z",
                        "id": 1,
                        "isMandatory": true,
                        "location": "sample location",
                        "startTime": "2018-01-05T12:30:00.000Z",
                        "title": "first event",
                      }
                    }
                  />
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-06T15:30:00.000Z",
                        "id": 2,
                        "isMandatory": false,
                        "location": "sample location",
                        "startTime": "2018-01-06T12:30:00.000Z",
                        "title": "second event",
                      }
                    }
                  />
                </CardGroup>,
                "className": "events-card-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <EventBlock
                      event={
                        Object {
                          "endTime": "2018-01-05T15:30:00.000Z",
                          "id": 1,
                          "isMandatory": true,
                          "location": "sample location",
                          "startTime": "2018-01-05T12:30:00.000Z",
                          "title": "first event",
                        }
                      }
                    />,
                    <EventBlock
                      event={
                        Object {
                          "endTime": "2018-01-06T15:30:00.000Z",
                          "id": 2,
                          "isMandatory": false,
                          "location": "sample location",
                          "startTime": "2018-01-06T12:30:00.000Z",
                          "title": "second event",
                        }
                      }
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "first event",
                    "nodeType": "class",
                    "props": Object {
                      "event": Object {
                        "endTime": "2018-01-05T15:30:00.000Z",
                        "id": 1,
                        "isMandatory": true,
                        "location": "sample location",
                        "startTime": "2018-01-05T12:30:00.000Z",
                        "title": "first event",
                      },
                      "user": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "second event",
                    "nodeType": "class",
                    "props": Object {
                      "event": Object {
                        "endTime": "2018-01-06T15:30:00.000Z",
                        "id": 2,
                        "isMandatory": false,
                        "location": "sample location",
                        "startTime": "2018-01-06T12:30:00.000Z",
                        "title": "second event",
                      },
                      "user": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="events-container-mobile"
          >
            <EventHeader
              handleViewChange={[Function]}
              session={Object {}}
            />
            <CardGroup>
              <EventBlock
                event={
                  Object {
                    "endTime": "2018-01-05T15:30:00.000Z",
                    "id": 1,
                    "isMandatory": true,
                    "location": "sample location",
                    "startTime": "2018-01-05T12:30:00.000Z",
                    "title": "first event",
                  }
                }
              />
              <EventBlock
                event={
                  Object {
                    "endTime": "2018-01-06T15:30:00.000Z",
                    "id": 2,
                    "isMandatory": false,
                    "location": "sample location",
                    "startTime": "2018-01-06T12:30:00.000Z",
                    "title": "second event",
                  }
                }
              />
            </CardGroup>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <EventHeader
                handleViewChange={[Function]}
                session={Object {}}
              />,
              <CardGroup>
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-05T15:30:00.000Z",
                      "id": 1,
                      "isMandatory": true,
                      "location": "sample location",
                      "startTime": "2018-01-05T12:30:00.000Z",
                      "title": "first event",
                    }
                  }
                />
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-06T15:30:00.000Z",
                      "id": 2,
                      "isMandatory": false,
                      "location": "sample location",
                      "startTime": "2018-01-06T12:30:00.000Z",
                      "title": "second event",
                    }
                  }
                />
              </CardGroup>,
            ],
            "className": "events-container-mobile",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "handleViewChange": [Function],
                "session": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-05T15:30:00.000Z",
                        "id": 1,
                        "isMandatory": true,
                        "location": "sample location",
                        "startTime": "2018-01-05T12:30:00.000Z",
                        "title": "first event",
                      }
                    }
                  />,
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-06T15:30:00.000Z",
                        "id": 2,
                        "isMandatory": false,
                        "location": "sample location",
                        "startTime": "2018-01-06T12:30:00.000Z",
                        "title": "second event",
                      }
                    }
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "first event",
                  "nodeType": "class",
                  "props": Object {
                    "event": Object {
                      "endTime": "2018-01-05T15:30:00.000Z",
                      "id": 1,
                      "isMandatory": true,
                      "location": "sample location",
                      "startTime": "2018-01-05T12:30:00.000Z",
                      "title": "first event",
                    },
                    "user": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "second event",
                  "nodeType": "class",
                  "props": Object {
                    "event": Object {
                      "endTime": "2018-01-06T15:30:00.000Z",
                      "id": 2,
                      "isMandatory": false,
                      "location": "sample location",
                      "startTime": "2018-01-06T12:30:00.000Z",
                      "title": "second event",
                    },
                    "user": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Default>
            <div
              className="events-container-desktop"
            >
              <EventHeader
                handleViewChange={[Function]}
                session={Object {}}
              />
              <div
                className="events-card-container"
              >
                <CardGroup>
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-05T15:30:00.000Z",
                        "id": 1,
                        "isMandatory": true,
                        "location": "sample location",
                        "startTime": "2018-01-05T12:30:00.000Z",
                        "title": "first event",
                      }
                    }
                  />
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-06T15:30:00.000Z",
                        "id": 2,
                        "isMandatory": false,
                        "location": "sample location",
                        "startTime": "2018-01-06T12:30:00.000Z",
                        "title": "second event",
                      }
                    }
                  />
                </CardGroup>
              </div>
            </div>
          </Default>,
          <Mobile>
            <div
              className="events-container-mobile"
            >
              <EventHeader
                handleViewChange={[Function]}
                session={Object {}}
              />
              <CardGroup>
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-05T15:30:00.000Z",
                      "id": 1,
                      "isMandatory": true,
                      "location": "sample location",
                      "startTime": "2018-01-05T12:30:00.000Z",
                      "title": "first event",
                    }
                  }
                />
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-06T15:30:00.000Z",
                      "id": 2,
                      "isMandatory": false,
                      "location": "sample location",
                      "startTime": "2018-01-06T12:30:00.000Z",
                      "title": "second event",
                    }
                  }
                />
              </CardGroup>
            </div>
          </Mobile>,
        ],
        "className": "content-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="events-container-desktop"
            >
              <EventHeader
                handleViewChange={[Function]}
                session={Object {}}
              />
              <div
                className="events-card-container"
              >
                <CardGroup>
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-05T15:30:00.000Z",
                        "id": 1,
                        "isMandatory": true,
                        "location": "sample location",
                        "startTime": "2018-01-05T12:30:00.000Z",
                        "title": "first event",
                      }
                    }
                  />
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-06T15:30:00.000Z",
                        "id": 2,
                        "isMandatory": false,
                        "location": "sample location",
                        "startTime": "2018-01-06T12:30:00.000Z",
                        "title": "second event",
                      }
                    }
                  />
                </CardGroup>
              </div>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EventHeader
                  handleViewChange={[Function]}
                  session={Object {}}
                />,
                <div
                  className="events-card-container"
                >
                  <CardGroup>
                    <EventBlock
                      event={
                        Object {
                          "endTime": "2018-01-05T15:30:00.000Z",
                          "id": 1,
                          "isMandatory": true,
                          "location": "sample location",
                          "startTime": "2018-01-05T12:30:00.000Z",
                          "title": "first event",
                        }
                      }
                    />
                    <EventBlock
                      event={
                        Object {
                          "endTime": "2018-01-06T15:30:00.000Z",
                          "id": 2,
                          "isMandatory": false,
                          "location": "sample location",
                          "startTime": "2018-01-06T12:30:00.000Z",
                          "title": "second event",
                        }
                      }
                    />
                  </CardGroup>
                </div>,
              ],
              "className": "events-container-desktop",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "handleViewChange": [Function],
                  "session": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <CardGroup>
                    <EventBlock
                      event={
                        Object {
                          "endTime": "2018-01-05T15:30:00.000Z",
                          "id": 1,
                          "isMandatory": true,
                          "location": "sample location",
                          "startTime": "2018-01-05T12:30:00.000Z",
                          "title": "first event",
                        }
                      }
                    />
                    <EventBlock
                      event={
                        Object {
                          "endTime": "2018-01-06T15:30:00.000Z",
                          "id": 2,
                          "isMandatory": false,
                          "location": "sample location",
                          "startTime": "2018-01-06T12:30:00.000Z",
                          "title": "second event",
                        }
                      }
                    />
                  </CardGroup>,
                  "className": "events-card-container",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <EventBlock
                        event={
                          Object {
                            "endTime": "2018-01-05T15:30:00.000Z",
                            "id": 1,
                            "isMandatory": true,
                            "location": "sample location",
                            "startTime": "2018-01-05T12:30:00.000Z",
                            "title": "first event",
                          }
                        }
                      />,
                      <EventBlock
                        event={
                          Object {
                            "endTime": "2018-01-06T15:30:00.000Z",
                            "id": 2,
                            "isMandatory": false,
                            "location": "sample location",
                            "startTime": "2018-01-06T12:30:00.000Z",
                            "title": "second event",
                          }
                        }
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "first event",
                      "nodeType": "class",
                      "props": Object {
                        "event": Object {
                          "endTime": "2018-01-05T15:30:00.000Z",
                          "id": 1,
                          "isMandatory": true,
                          "location": "sample location",
                          "startTime": "2018-01-05T12:30:00.000Z",
                          "title": "first event",
                        },
                        "user": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "second event",
                      "nodeType": "class",
                      "props": Object {
                        "event": Object {
                          "endTime": "2018-01-06T15:30:00.000Z",
                          "id": 2,
                          "isMandatory": false,
                          "location": "sample location",
                          "startTime": "2018-01-06T12:30:00.000Z",
                          "title": "second event",
                        },
                        "user": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="events-container-mobile"
            >
              <EventHeader
                handleViewChange={[Function]}
                session={Object {}}
              />
              <CardGroup>
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-05T15:30:00.000Z",
                      "id": 1,
                      "isMandatory": true,
                      "location": "sample location",
                      "startTime": "2018-01-05T12:30:00.000Z",
                      "title": "first event",
                    }
                  }
                />
                <EventBlock
                  event={
                    Object {
                      "endTime": "2018-01-06T15:30:00.000Z",
                      "id": 2,
                      "isMandatory": false,
                      "location": "sample location",
                      "startTime": "2018-01-06T12:30:00.000Z",
                      "title": "second event",
                    }
                  }
                />
              </CardGroup>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EventHeader
                  handleViewChange={[Function]}
                  session={Object {}}
                />,
                <CardGroup>
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-05T15:30:00.000Z",
                        "id": 1,
                        "isMandatory": true,
                        "location": "sample location",
                        "startTime": "2018-01-05T12:30:00.000Z",
                        "title": "first event",
                      }
                    }
                  />
                  <EventBlock
                    event={
                      Object {
                        "endTime": "2018-01-06T15:30:00.000Z",
                        "id": 2,
                        "isMandatory": false,
                        "location": "sample location",
                        "startTime": "2018-01-06T12:30:00.000Z",
                        "title": "second event",
                      }
                    }
                  />
                </CardGroup>,
              ],
              "className": "events-container-mobile",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "handleViewChange": [Function],
                  "session": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <EventBlock
                      event={
                        Object {
                          "endTime": "2018-01-05T15:30:00.000Z",
                          "id": 1,
                          "isMandatory": true,
                          "location": "sample location",
                          "startTime": "2018-01-05T12:30:00.000Z",
                          "title": "first event",
                        }
                      }
                    />,
                    <EventBlock
                      event={
                        Object {
                          "endTime": "2018-01-06T15:30:00.000Z",
                          "id": 2,
                          "isMandatory": false,
                          "location": "sample location",
                          "startTime": "2018-01-06T12:30:00.000Z",
                          "title": "second event",
                        }
                      }
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "first event",
                    "nodeType": "class",
                    "props": Object {
                      "event": Object {
                        "endTime": "2018-01-05T15:30:00.000Z",
                        "id": 1,
                        "isMandatory": true,
                        "location": "sample location",
                        "startTime": "2018-01-05T12:30:00.000Z",
                        "title": "first event",
                      },
                      "user": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "second event",
                    "nodeType": "class",
                    "props": Object {
                      "event": Object {
                        "endTime": "2018-01-06T15:30:00.000Z",
                        "id": 2,
                        "isMandatory": false,
                        "location": "sample location",
                        "startTime": "2018-01-06T12:30:00.000Z",
                        "title": "second event",
                      },
                      "user": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
